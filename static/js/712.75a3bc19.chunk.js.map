{"version":3,"file":"static/js/712.75a3bc19.chunk.js","mappings":"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","sources":["ErrorHandling/errorHandling.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["export const displayNoResultMessage = setError => {\n  setError(\n    \"Apologies, but it seems that something didn't go as planned. Please bear with us and try again later.\"\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 1200;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderWrapper>\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  </LoaderWrapper>\n);\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  width: 280px;\n  padding: 16px;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  img {\n    width: 100%;\n    max-height: 450px;\n    object-fit: cover;\n    border-radius: 4px;\n    margin-bottom: 12px;\n  }\n\n  h4 {\n    margin: 0;\n    font-size: 16px;\n    text-align: center;\n    font-weight: bold;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Item } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <div>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg'\n            }\n            alt={movie.title}\n          />\n        </div>\n        <h4>{movie.original_title || movie.name}</h4>\n      </NavLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    adult: PropTypes.bool,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport MovieItem from 'components/MovieItem';\nimport { List } from './MovieList.styled';\n\nconst MovieList = ({ movies = [] }) => {\n  const showMovies = movies?.length > 0;\n\n  return (\n    <List>\n      {showMovies &&\n        movies.map(movie => <MovieItem key={movie.id} movie={movie} />)}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 48px;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin-right: 8px;\n  font-size: 16px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { StyledForm, StyledInput, StyledButton } from './Searchbar.styled';\nimport { useState } from 'react';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchValue);\n    setSearchValue('');\n  };\n\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        name=\"searchValue\"\n        placeholder=\"Search movies\"\n        value={searchValue}\n        onChange={handleChange}\n      />\n      <StyledButton type=\"submit\">\n        <AiOutlineSearch />\n      </StyledButton>\n    </StyledForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getSearchMovie } from 'services/api';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Loader from 'components/Loader/Loader';\nimport { displayNoResultMessage } from 'ErrorHandling/errorHandling';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchMovies = async query => {\n      try {\n        setLoading(true);\n        const data = await getSearchMovie(query);\n        setMovies(data.results);\n        setHasSearched(true);\n      } catch (error) {\n        displayNoResultMessage(setError);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies(query);\n  }, [query]);\n\n  const handleRequest = query => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <section>\n      <Searchbar onSubmit={handleRequest} />\n      <section>\n        {loading && <Loader />}\n        {error ? (\n          <p>Ooops, error: {error}</p>\n        ) : movies.length === 0 ? (\n          hasSearched && <p>Sorry, no results found</p>\n        ) : (\n          <MovieList movies={movies} />\n        )}\n      </section>\n    </section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nexport const getTrendFilms = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n"],"names":["displayNoResultMessage","setError","LoaderWrapper","styled","strokeColor","strokeWidth","animationDuration","width","visible","Item","movie","location","useLocation","to","id","state","from","src","poster_path","alt","title","original_title","name","List","movies","showMovies","length","map","StyledForm","StyledInput","StyledButton","onSubmit","useState","searchValue","setSearchValue","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","setMovies","loading","setLoading","error","hasSearched","setHasSearched","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovies","getSearchMovie","data","results","Loader","MovieList","BASE_URL","API_KEY","getTrendFilms","axios","res","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}