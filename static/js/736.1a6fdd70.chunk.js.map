{"version":3,"file":"static/js/736.1a6fdd70.chunk.js","mappings":"oPA8CA,UAxCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBJ,GAFlB,OAEXK,EAFW,OAGjBR,EAAWQ,EAAKC,SAHC,iDAKjBC,EAAAA,EAAAA,GAAuBR,GALN,yDAAH,qDASlBI,GACD,GAAE,CAACH,KAGF,8BACE,UAAC,KAAD,WACGF,IAAS,cAAGU,UAAU,QAAb,SAAsBV,KAC9BA,GAASF,EAAQa,OAAS,GAC1B,yBACGb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,iBAAKL,UAAU,SAAf,WACE,cAAGA,UAAU,SAAb,SAAuBI,KACvB,uBAAIC,MAFuBF,EADlB,OAQf,uBAAG,8BAKZ,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { displayNoResultMessage } from 'ErrorHandling/errorHandling';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { StyledReviews } from './styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        displayNoResultMessage(setError);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <section>\n      <StyledReviews>\n        {error && <p className=\"error\">{error}</p>}\n        {!error && reviews.length > 0 ? (\n          <div>\n            {reviews.map(({ id, author, content }) => (\n              <div className=\"review\" key={id}>\n                <p className=\"author\">{author}</p>\n                <p>{content}</p>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No reviews available.</p>\n        )}\n      </StyledReviews>\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchReviews","getMovieReviews","data","results","displayNoResultMessage","className","length","map","id","author","content"],"sourceRoot":""}