{"version":3,"file":"static/js/691.039e7230.chunk.js","mappings":"uKAAO,IAAMA,EAAyB,SAAAC,GACpCA,EACE,wGAEH,C,sDCaD,IAde,WACb,OACE,SAAC,KAAD,CAAKC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAvD,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,sGCbYC,EAAOC,EAAAA,EAAAA,GAAH,g8B,SCsCjB,EAnCkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,WACE,UAAC,KAAD,CAASK,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAnD,WACE,0BACE,gBACEM,IACEP,EAAMQ,YACF,0CAAmCR,EAAMQ,cACvC,EAEF,6EAENC,IAAKT,EAAMU,WAGf,wBAAKV,EAAMW,gBAAkBX,EAAMY,WAI1C,ECzBYC,EAAOd,EAAAA,EAAAA,GAAH,kLCwBjB,EArBkB,SAAC,GAAqB,IAAD,IAAlBe,OAAAA,OAAkB,MAAT,GAAS,EAC/BC,GAAmB,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQE,QAAS,EAEpC,OACE,+BACE,SAACH,EAAD,UACGE,GACCD,EAAOG,KAAI,SAAAjB,GAAK,OAAI,SAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMI,GAA1B,OAIzB,C,2KCdYc,E,QAAmBnB,EAAAA,QAAH,8C,mECoG7B,EAzFe,WACb,IAAQoB,GAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA5BF,aACR,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcrC,EAAd,KACA,GAAsCiC,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACMC,EAAQV,EAAaW,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MACX/B,GAAWC,EAAAA,EAAAA,OAEjB+B,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAEA,IAAMK,EAAW,mCAAG,WAAML,GAAN,uFAEhBJ,GAAW,GAFK,UAGGU,EAAAA,EAAAA,IAAeN,GAHlB,OAGVO,EAHU,OAIhBb,EAAUa,EAAKC,SACfT,GAAe,GALC,iDAOhBxC,EAAAA,EAAAA,GAAuBC,GAPP,yBAShBoC,GAAW,GATK,4EAAH,sDAabI,EACFK,EAAYL,IAEZN,EAAU,IACVK,GAAe,GAnBC,CAqBnB,GAAE,CAACC,IAUJ,OACE,SAACX,EAAD,WACE,iCACE,UAAC,IAAD,CACEoB,KAAK,SACLC,QAba,WACftC,EAASI,OACX0B,EAAS9B,EAASI,MAAMC,MAG1ByB,EAAS,IACV,EAQOS,IAAI,MACJC,GAAG,OACHC,OAAQ,CAAEC,MAAO,UALnB,WAOE,SAAC,IAAD,IAAiB,WAGlBnB,IACC,SAAC,KAAD,CACElC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfiD,GAAI,EAJN,UAME,SAACG,EAAA,EAAD,MAGHlB,GACC,yBAAG,iBAAeA,KACE,IAAlBZ,EAAOE,OACTW,IAAe,uBAAG,6BAElB,iCACE,UAAC,IAAD,CACEkB,SAAS,OACTF,MAAM,SACNG,WAAW,kCAEXL,GAAG,OALL,UAMC,8BAC6BZ,EAAMkB,cAAc,SAAO,IACtDjC,EAAOE,OAAO,cAEjB,SAACgC,EAAA,EAAD,CAAWlC,OAAQA,WAM9B,C,mPClGKmC,EAAW,+BACXC,EAAU,mCAEHC,EAAa,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,UACbH,EADa,qCACwBC,EADxB,oBADS,cACrBG,EADqB,yBAKpBA,EAAIjB,MALgB,2CAAH,qDAQbD,EAAc,mCAAG,WAAMN,GAAN,uFACVuB,EAAAA,EAAAA,IAAA,UACbH,EADa,iCACoBC,EADpB,iCACoDrB,IAF1C,cACtBwB,EADsB,yBAKrBA,EAAIjB,MALiB,2CAAH,sDAQdkB,EAAY,mCAAG,WAAMlD,GAAN,uFACRgD,EAAAA,EAAAA,IAAA,UACbH,EADa,kBACK7C,EADL,oBACmB8C,EADnB,oBADQ,cACpBG,EADoB,yBAKnBA,EAAIjB,MALe,2CAAH,sDAQZmB,EAAY,mCAAG,WAAMnD,GAAN,uFACRgD,EAAAA,EAAAA,IAAA,UACbH,EADa,kBACK7C,EADL,4BAC2B8C,EAD3B,oBADQ,cACpBG,EADoB,yBAKnBA,EAAIjB,MALe,2CAAH,sDAQZoB,EAAe,mCAAG,WAAMpD,GAAN,uFACXgD,EAAAA,EAAAA,IAAA,UACbH,EADa,kBACK7C,EADL,4BAC2B8C,EAD3B,oBADW,cACvBG,EADuB,yBAKtBA,EAAIjB,MALkB,2CAAH,sDAQfqB,EAAiB,mCAAG,0GACbL,EAAAA,EAAAA,IAAA,UACbH,EADa,mCACsBC,EADtB,oBADa,UACzBG,EADyB,UAKzBK,EAAiBL,EAAIjB,KAAKC,SAEbrB,OAAS,GAPG,uBAQvB2C,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAe1C,QACxD+C,EAAcL,EAAeC,GATN,kBAUtBI,GAVsB,2CAAH,qDAcjBC,EAAc,mCAAG,WAAM5D,GAAN,uFACVgD,EAAAA,EAAAA,IAAA,UACbH,EADa,kBACK7C,EADL,2BAC0B8C,EAD1B,oBADU,cACtBG,EADsB,yBAKrBA,EAAIjB,KAAKC,SALY,2CAAH,qD,8ECtDvB4B,GAAgBC,EAAAA,EAAAA,GAAW,CAC7BC,YAAa,gBACbC,MAAsBC,EAAAA,EAAAA,MAAK,IAAK,CAAEC,KAAM,eAAgBC,SAAU,EAChDC,EAAAA,EAAAA,KAAI,OAAQ,CAAE,EAAG,mMACjBA,EAAAA,EAAAA,KAAI,OAAQ,CAAE,EAAG,gM","sources":["ErrorHandling/errorHandling.js","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js","../node_modules/@chakra-ui/icons/src/ArrowLeft.tsx"],"sourcesContent":["export const displayNoResultMessage = setError => {\n  setError(\n    \"Apologies, but it seems that something didn't go as planned. Please bear with us and try again later.\"\n  );\n};\n","import { Box } from '@chakra-ui/react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 16px;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;\n  margin-bottom: 20px;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n\n    h4 {\n      color: orange;\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n    }\n  }\n\n  img {\n    width: 100%;\n    max-height: 450px;\n    object-fit: cover;\n    border-radius: 4px;\n    margin-bottom: 12px;\n  }\n\n  h4 {\n    margin: 0;\n    font-size: 16px;\n    text-align: center;\n    font-weight: bold;\n    color: inherit;\n    transition: color 0.3s ease-in-out, text-shadow 0.3s ease-in-out;\n  }\n\n  @media (min-width: 1200px) {\n    width: calc((100% - 28px * 3) / 4);\n  }\n\n  @media (max-width: 1199px) and (min-width: 768px) {\n    width: calc((100% - 28px * 2) / 3);\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Item } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <div>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` || (\n                    <p>Loading...</p>\n                  )\n                : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg'\n            }\n            alt={movie.title}\n          />\n        </div>\n        <h4>{movie.original_title || movie.name}</h4>\n      </NavLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    adult: PropTypes.bool,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 28px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport MovieItem from 'components/MovieItem';\nimport { List } from './MovieList.styled';\n\nconst MovieList = ({ movies = [] }) => {\n  const showMovies = movies?.length > 0;\n\n  return (\n    <>\n      <List>\n        {showMovies &&\n          movies.map(movie => <MovieItem key={movie.id} movie={movie} />)}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const StyledMoviesPage = styled.section`\n  min-height: 100vh;\n`;\n","import { useContext, useEffect, useState } from 'react';\n\nimport { getSearchMovie } from 'services/api';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { displayNoResultMessage } from 'ErrorHandling/errorHandling';\nimport { StyledMoviesPage } from './Movies.styled';\nimport { Box, Button, Heading } from '@chakra-ui/react';\nimport { searchParamsContext } from 'context/contextProvider';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ArrowLeftIcon } from '@chakra-ui/icons';\n\nconst Movies = () => {\n  const { searchParams } = useContext(searchParamsContext);\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasSearched, setHasSearched] = useState(false);\n  const query = searchParams.get('query');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchMovies = async query => {\n      try {\n        setLoading(true);\n        const data = await getSearchMovie(query);\n        setMovies(data.results);\n        setHasSearched(true);\n      } catch (error) {\n        displayNoResultMessage(setError);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (query) {\n      fetchMovies(query);\n    } else {\n      setMovies([]);\n      setHasSearched(false);\n    }\n  }, [query]);\n\n  const handleGoBack = () => {\n    if (location.state) {\n      navigate(location.state.from);\n    }\n\n    navigate('/');\n  };\n\n  return (\n    <StyledMoviesPage>\n      <>\n        <Button\n          type=\"button\"\n          onClick={handleGoBack}\n          gap=\"8px\"\n          mb=\"28px\"\n          _hover={{ color: 'orange' }}\n        >\n          <ArrowLeftIcon /> HOME\n        </Button>\n\n        {loading && (\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            mb={4}\n          >\n            <Loader />\n          </Box>\n        )}\n        {error ? (\n          <p>Ooops, error: {error}</p>\n        ) : movies.length === 0 ? (\n          hasSearched && <p>Sorry, no results found</p>\n        ) : (\n          <>\n            <Heading\n              fontSize=\"32px\"\n              color=\"orange\"\n              textShadow=\"2px 2px 4px rgba(0, 0, 0, 0.3)\n              \"\n              mb=\"28px\"\n            >\n              According to your request, {query.toUpperCase()} found{' '}\n              {movies.length} movies\n            </Heading>\n            <MovieList movies={movies} />\n          </>\n        )}\n      </>\n    </StyledMoviesPage>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nexport const getTrendFilms = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getUpcomingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/upcoming?api_key=${API_KEY}&language=en-US`\n  );\n\n  const upcomingMovies = res.data.results;\n\n  if (upcomingMovies.length > 0) {\n    const randomIndex = Math.floor(Math.random() * upcomingMovies.length);\n    const randomMovie = upcomingMovies[randomIndex];\n    return randomMovie;\n  }\n};\n\nexport const getMovieVideos = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.results;\n};\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ArrowLeftIcon = createIcon({\n  displayName: \"ArrowLeftIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M10.416,12a2.643,2.643,0,0,1,.775-1.875L20.732.584a1.768,1.768,0,0,1,2.5,2.5l-8.739,8.739a.25.25,0,0,0,0,.354l8.739,8.739a1.768,1.768,0,0,1-2.5,2.5l-9.541-9.541A2.643,2.643,0,0,1,10.416,12Z\" />\n      <path d=\"M.25,12a2.643,2.643,0,0,1,.775-1.875L10.566.584a1.768,1.768,0,0,1,2.5,2.5L4.327,11.823a.25.25,0,0,0,0,.354l8.739,8.739a1.768,1.768,0,0,1-2.5,2.5L1.025,13.875A2.643,2.643,0,0,1,.25,12Z\" />\n    </g>\n  ),\n})\n"],"names":["displayNoResultMessage","setError","display","alignItems","justifyContent","strokeColor","strokeWidth","animationDuration","width","visible","Item","styled","movie","location","useLocation","to","id","state","from","src","poster_path","alt","title","original_title","name","List","movies","showMovies","length","map","StyledMoviesPage","searchParams","useContext","searchParamsContext","useState","setMovies","loading","setLoading","error","hasSearched","setHasSearched","query","get","navigate","useNavigate","useEffect","fetchMovies","getSearchMovie","data","results","type","onClick","gap","mb","_hover","color","Loader","fontSize","textShadow","toUpperCase","MovieList","BASE_URL","API_KEY","getTrendFilms","axios","res","getMovieById","getMovieCast","getMovieReviews","getUpcomingMovies","upcomingMovies","randomIndex","Math","floor","random","randomMovie","getMovieVideos","displayName","createIcon","path","fill","ArrowLeftIcon","children","d","jsx"],"sourceRoot":""}