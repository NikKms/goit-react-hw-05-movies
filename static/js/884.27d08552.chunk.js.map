{"version":3,"file":"static/js/884.27d08552.chunk.js","mappings":"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","sources":["ErrorHandling/errorHandling.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails.jsx","pages/styled.jsx","services/api.js"],"sourcesContent":["export const displayNoResultMessage = setError => {\n  setError(\n    \"Apologies, but it seems that something didn't go as planned. Please bear with us and try again later.\"\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 1200;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderWrapper>\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  </LoaderWrapper>\n);\n\nexport default Loader;\n","import { Suspense, useEffect, useState, lazy } from 'react';\nimport {\n  Routes,\n  Route,\n  useLocation,\n  useNavigate,\n  useParams,\n  Link,\n} from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nimport { getMovieById } from 'services/api';\nimport {\n  MovieInfo,\n  MoviePoster,\n  StyledLinkWraper,\n  StyledMovieDetails,\n} from './styled';\n\nimport Loader from 'components/Loader/Loader';\nimport { displayNoResultMessage } from 'ErrorHandling/errorHandling';\n\nconst LazyCast = lazy(() => import('./Cast'));\nconst LazyReviews = lazy(() => import('./Reviews'));\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async movieId => {\n      try {\n        setLoading(true);\n\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (error) {\n        displayNoResultMessage(setError);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    if (location.state) {\n      navigate(location.state.from);\n      return;\n    }\n\n    navigate('/');\n  };\n\n  return (\n    <section>\n      <button type=\"button\" onClick={handleGoBack}>\n        <AiOutlineArrowLeft />\n        <b>Go back</b>\n      </button>\n      {loading && <Loader />}\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        movie &&\n        !loading && (\n          <StyledMovieDetails>\n            <MoviePoster>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                    : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg'\n                }\n                alt={movieId.title}\n              />\n            </MoviePoster>\n            <MovieInfo>\n              <h1>{movie.original_title || movie.name}</h1>\n              <p>User score: {(movie.vote_average * 10).toFixed()}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              {movie.genres &&\n                movie.genres.map((genre, index) => (\n                  <span key={index}>{genre.name}</span>\n                ))}\n            </MovieInfo>\n          </StyledMovieDetails>\n        )\n      )}\n\n      {!error && (\n        <StyledLinkWraper>\n          <h3> Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: location.state?.from }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location.state?.from }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </StyledLinkWraper>\n      )}\n\n      {!error && (\n        <Suspense\n          fallback={\n            <div\n              style={{\n                fontSize: '24px',\n                textAlign: 'center',\n                marginTop: '20px',\n                backgroundColor: '#f8f8f8',\n                color: '#333',\n                padding: '20px',\n              }}\n            >\n              Loading...\n            </div>\n          }\n        >\n          <Routes>\n            <Route path=\"cast\" element={<LazyCast />} />\n            <Route path=\"reviews\" element={<LazyReviews />} />\n          </Routes>\n        </Suspense>\n      )}\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-top: 20px;\n`;\n\nexport const MoviePoster = styled.div`\n  flex: 0 0 200px;\n  margin-right: 20px;\n\n  img {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  flex: 1;\n\n  h1 {\n    font-size: 24px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-bottom: 5px;\n  }\n\n  h2 {\n    font-size: 18px;\n    margin: 15px 0 5px;\n  }\n\n  span {\n    display: inline-block;\n    margin-right: 5px;\n    margin-bottom: 5px;\n    padding: 5px 10px;\n    background-color: #f2f2f2;\n    border-radius: 4px;\n  }\n`;\n\nexport const StyledCast = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n\n  div {\n    text-align: center;\n\n    img {\n      width: 100%;\n      height: auto;\n      object-fit: cover;\n      border-radius: 4px;\n    }\n\n    p {\n      margin-top: 10px;\n    }\n  }\n`;\n\nexport const StyledLinkWraper = styled.div`\n  font-family: Arial, sans-serif;\n  margin-bottom: 20px;\n\n  & h3 {\n    font-size: 18px;\n    margin-top: 0;\n    margin-bottom: 10px;\n  }\n\n  & ul {\n    display: flex;\n    gap: 16px;\n    list-style-type: none;\n    padding: 0;\n  }\n\n  & li {\n    border: 1px solid gray;\n    border-radius: 4px;\n    padding: 4px;\n  }\n\n  & a {\n    color: #333;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  & div {\n    background-color: #f5f5f5;\n    padding: 10px;\n  }\n`;\n\nexport const StyledReviews = styled.div`\n  font-family: Arial, sans-serif;\n  margin-top: 20px;\n\n  & p {\n    margin: 0;\n  }\n\n  & .error {\n    color: red;\n    font-weight: bold;\n  }\n\n  & .review {\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    padding: 10px;\n  }\n\n  & .author {\n    font-weight: bold;\n  }\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nexport const getTrendFilms = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n"],"names":["displayNoResultMessage","setError","LoaderWrapper","styled","strokeColor","strokeWidth","animationDuration","width","visible","LazyCast","lazy","LazyReviews","useState","movie","setMovie","loading","setLoading","error","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetails","getMovieById","data","type","onClick","state","from","src","poster_path","alt","title","original_title","name","vote_average","toFixed","overview","genres","map","genre","index","to","Suspense","fallback","style","fontSize","textAlign","marginTop","backgroundColor","color","padding","path","element","StyledMovieDetails","MoviePoster","MovieInfo","StyledCast","StyledLinkWraper","StyledReviews","BASE_URL","API_KEY","getTrendFilms","axios","res","getSearchMovie","query","id","getMovieCast","getMovieReviews"],"sourceRoot":""}